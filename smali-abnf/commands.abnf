#####SMALI COMMANDS RULES#####
cmdAny =  cmdArrayLength;
cmdAny =/ cmdCheckCast;
cmdAny =/ cmdCmpgDouble;
cmdAny =/ cmdCmpgFloat;
cmdAny =/ cmdCmplDouble;
cmdAny =/ cmdCmplFloat;
cmdAny =/ cmdCmpLong;
cmdAny =/ cmdConst;
cmdAny =/ cmdConst16;
cmdAny =/ cmdConst4;
cmdAny =/ cmdConstClass;
cmdAny =/ cmdConstHigh16;
cmdAny =/ cmdConstString;
cmdAny =/ cmdConstStringJumbo;
cmdAny =/ cmdConstWide;
cmdAny =/ cmdConstWide16;
cmdAny =/ cmdConstWide32;
cmdAny =/ cmdConstWideHigh16;
cmdAny =/ cmdFillArrayData;
cmdAny =/ cmdFilledNewArray;
cmdAny =/ cmdFilledNewArrayRange;
cmdAny =/ cmdGoto;
cmdAny =/ cmdGoto16;
cmdAny =/ cmdGoto32;
cmdAny =/ cmdIfEq;
cmdAny =/ cmdIfEqz;
cmdAny =/ cmdIfGe;
cmdAny =/ cmdIfGez;
cmdAny =/ cmdIfGt;
cmdAny =/ cmdIfGtz;
cmdAny =/ cmdIfLe;
cmdAny =/ cmdIfLez;
cmdAny =/ cmdIfLt;
cmdAny =/ cmdIfLtz;
cmdAny =/ cmdIfNe;
cmdAny =/ cmdIfNez;
cmdAny =/ cmdIget;
cmdAny =/ cmdIgetObject;
cmdAny =/ cmdIgetWide;
cmdAny =/ cmdInstanceOf;
cmdAny =/ cmdInvokeDirect;
cmdAny =/ cmdInvokeInterface;
cmdAny =/ cmdInvokeStatic;
cmdAny =/ cmdInvokeVirtual;
cmdAny =/ cmdIput;
cmdAny =/ cmdIputObject;
cmdAny =/ cmdIputWide;
cmdAny =/ cmdMonitorEnter;
cmdAny =/ cmdMonitorExit;
cmdAny =/ cmdMove;
cmdAny =/ cmdMove16;
cmdAny =/ cmdMoveFrom16;
cmdAny =/ cmdMoveObject;
cmdAny =/ cmdMoveObject16;
cmdAny =/ cmdMoveObjectFrom16;
cmdAny =/ cmdMoveResult;
cmdAny =/ cmdMoveResultObject;
cmdAny =/ cmdMoveResultWide;
cmdAny =/ cmdMoveWide;
cmdAny =/ cmdMoveWide16;
cmdAny =/ cmdMoveWideFrom16;
cmdAny =/ cmdNewArray;
cmdAny =/ cmdNewInstance;
cmdAny =/ cmdNop;
cmdAny =/ cmdPackedSwitch;
cmdAny =/ cmdReturn;
cmdAny =/ cmdReturnObject;
cmdAny =/ cmdReturnVoid;
cmdAny =/ cmdReturnWide;
cmdAny =/ cmdSgetObject;
cmdAny =/ cmdSparseSwitch;
cmdAny =/ cmdSputObject;
cmdAny =/ cmdThrow;

cmdArrayLength         = optPadding "array-length" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdCheckCast           = optPadding "check-cast" padding codeRegister listSeparator smaliClassRef optPadding [padding commentSequence] CRLF;
cmdCmpgDouble          = optPadding "cmpg-double" padding codeRegisterVDst listSeparator codeRegister64 listSeparator codeRegister64 optPadding [padding commentSequence] CRLF;
cmdCmpgFloat           = optPadding "cmpg-float" padding codeRegisterVDst listSeparator codeRegister listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdCmplDouble          = optPadding "cmpl-double" padding codeRegisterVDst listSeparator codeRegister64 listSeparator codeRegister64 optPadding [padding commentSequence] CRLF;
cmdCmplFloat           = optPadding "cmpl-float" padding codeRegisterVDst listSeparator codeRegister listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdCmpLong             = optPadding "cmp-long" padding codeRegisterVDst listSeparator codeRegister64 listSeparator codeRegister64 optPadding [padding commentSequence] CRLF;
cmdConst               = optPadding "const" padding codeRegisterVDst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConst16             = optPadding "const/16" padding codeRegisterVDst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConst4              = optPadding "const/4" padding codeRegisterVDst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConstClass          = optPadding "const-class" padding codeRegisterVDst listSeparator smaliClassRef optPadding [padding commentSequence] CRLF;
cmdConstHigh16         = optPadding "const/high16" padding codeRegisterVDst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConstString         = optPadding "const-string" padding codeRegisterVDst listSeparator strValue optPadding [padding commentSequence] CRLF;
cmdConstStringJumbo    = optPadding "const-string/jumbo" padding codeRegisterVDst listSeparator strValue optPadding [padding commentSequence] CRLF;
cmdConstWide           = optPadding "const-wide" padding codeRegisterV64Dst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConstWide16         = optPadding "const-wide/16" padding codeRegisterV64Dst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConstWide32         = optPadding "const-wide/32" padding codeRegisterV64Dst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdConstWideHigh16     = optPadding "const-wide/high16" padding codeRegisterV64Dst listSeparator intValue optPadding [padding commentSequence] CRLF;
cmdFillArrayData       = optPadding "fill-array-data" padding todoStubLine optPadding [padding commentSequence] CRLF;
cmdFilledNewArray      = optPadding "filled-new-array" padding todoStubLine optPadding [padding commentSequence] CRLF;
cmdFilledNewArrayRange = optPadding "filled-new-array/range" padding todoStubLine optPadding [padding commentSequence] CRLF;
cmdGoto                = optPadding "goto" padding codeLabel optPadding [padding commentSequence] CRLF;
cmdGoto16              = optPadding "goto/16" padding codeLabel optPadding [padding commentSequence] CRLF;
cmdGoto32              = optPadding "goto/32" padding codeLabel optPadding [padding commentSequence] CRLF;
cmdIfEq                = optPadding "if-eq" padding codeRegister listSeparator codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfEqz               = optPadding "if-eqz" padding codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfGe                = optPadding "if-ge" padding codeRegister listSeparator codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfGez               = optPadding "if-gez" padding codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfGt                = optPadding "if-gt" padding codeRegister listSeparator codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfGtz               = optPadding "if-gtz" padding codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfLe                = optPadding "if-le" padding codeRegister listSeparator codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfLez               = optPadding "if-lez" padding codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfLt                = optPadding "if-lt" padding codeRegister listSeparator codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfLtz               = optPadding "if-ltz" padding codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfNe                = optPadding "if-ne" padding codeRegister listSeparator codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIfNez               = optPadding "if-nez" padding codeRegister listSeparator codeLabel optPadding [padding commentSequence] CRLF;
cmdIget                = optPadding "iget" padding codeRegisterVDst listSeparator codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdIgetObject          = optPadding "iget-object" padding codeRegisterVDst listSeparator codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdIgetWide            = optPadding "iget-wide" padding codeRegisterV64Dst listSeparator codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdInstanceOf          = optPadding "instance-of" padding codeRegisterVDst listSeparator codeRegister listSeparator smaliClassRef optPadding [padding commentSequence] CRLF;
cmdInvokeDirect        = optPadding "invoke-direct" padding codeRegisterGroup listSeparator smaliMethodRef optPadding [padding commentSequence] CRLF;
cmdInvokeInterface     = optPadding "invoke-interface" padding codeRegisterGroup listSeparator smaliMethodRef optPadding [padding commentSequence] CRLF;
cmdInvokeStatic        = optPadding "invoke-static" padding codeRegisterGroup listSeparator smaliMethodRef optPadding [padding commentSequence] CRLF;
cmdInvokeVirtual       = optPadding "invoke-virtual" padding codeRegisterGroup listSeparator smaliMethodRef optPadding [padding commentSequence] CRLF;
cmdIput                = optPadding "iput" padding codeRegister listSeparator codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdIputObject          = optPadding "iput-object" padding codeRegister listSeparator codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdIputWide            = optPadding "iput-wide" padding codeRegister64 listSeparator codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdMonitorEnter        = optPadding "monitor-enter" padding codeRegister optPadding [padding commentSequence] CRLF;
cmdMonitorExit         = optPadding "monitor-exit" padding codeRegister optPadding [padding commentSequence] CRLF;
cmdMove                = optPadding "move" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdMove16              = optPadding "move/16" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdMoveException       = optPadding "move-exception" padding codeRegisterVDst optPadding [padding commentSequence] CRLF;
cmdMoveFrom16          = optPadding "move/from16" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdMoveObject          = optPadding "move-object" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdMoveObject16        = optPadding "move-object/16" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdMoveObjectFrom16    = optPadding "move-object/from16" padding codeRegisterVDst listSeparator codeRegister optPadding [padding commentSequence] CRLF;
cmdMoveResult          = optPadding "move-result" padding codeRegisterVDst optPadding [padding commentSequence] CRLF;
cmdMoveResultObject    = optPadding "move-result-object" padding codeRegisterVDst optPadding [padding commentSequence] CRLF;
cmdMoveResultWide      = optPadding "move-result-wide" padding codeRegisterV64Dst optPadding [padding commentSequence] CRLF;
cmdMoveWide            = optPadding "move-wide" padding codeRegisterV64Dst listSeparator codeRegister64 optPadding [padding commentSequence] CRLF;
cmdMoveWide16          = optPadding "move-wide/16" padding codeRegisterV64Dst listSeparator codeRegister64 optPadding [padding commentSequence] CRLF;
cmdMoveWideFrom16      = optPadding "move-wide/from16" padding codeRegisterV64Dst listSeparator codeRegister64 optPadding [padding commentSequence] CRLF;
cmdNewArray            = optPadding "new-array" padding codeRegisterVDst listSeparator codeRegister listSeparator smaliClassRef optPadding [padding commentSequence] CRLF;
cmdNewInstance         = optPadding "new-instance" padding codeRegisterVDst listSeparator smaliClassRef optPadding [padding commentSequence] CRLF;
cmdNop                 = optPadding "nop" optPadding [padding commentSequence] CRLF;
cmdPackedSwitch        = optPadding "packed-switch" padding todoStubLine optPadding [padding commentSequence] CRLF;
cmdReturn              = optPadding "return" padding codeRegisterRet optPadding [padding commentSequence] CRLF;
cmdReturnObject        = optPadding "return-object" padding codeRegisterRet optPadding [padding commentSequence] CRLF;
cmdReturnVoid          = optPadding "return-void" optPadding [padding commentSequence] CRLF;
cmdReturnWide          = optPadding "return-wide" padding codeRegisterRet64 optPadding [padding commentSequence] CRLF;
cmdSgetObject          = optPadding "sget-object" padding codeRegisterVDst listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdSparseSwitch        = optPadding "sparse-switch" padding todoStubLine optPadding [padding commentSequence] CRLF;
cmdSputObject          = optPadding "sput-object" padding codeRegister listSeparator smaliFieldRef optPadding [padding commentSequence] CRLF;
cmdThrow               = optPadding "throw" padding codeRegister optPadding [padding commentSequence] CRLF;
